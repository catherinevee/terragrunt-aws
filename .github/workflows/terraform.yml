name: 'Terraform CI/CD Pipeline'

on:
  push:
    branches: [ "main", "develop" ]
    paths:
      - 'environments/**'
      - 'modules/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'environments/**'
      - 'modules/**'
      - '.github/workflows/terraform.yml'

env:
  TF_VERSION: '1.5.0'
  TERRAGRUNT_VERSION: '0.50.0'
  AWS_REGION: 'us-east-1'
  TERRAGRUNT_DOWNLOAD: '.tg-cache'

jobs:
  # Job 1: Basic Terraform Check
  basic-check:
    name: 'Basic Terraform Check'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Terragrunt
        uses: gruntwork-io/setup-terragrunt@v0.0.3
        with:
          terragrunt-version: ${{ env.TERRAGRUNT_VERSION }}

      - name: Basic Check
        run: |
          echo "=== Basic Terraform Check ==="
          echo "Terraform version:"
          terraform version
          echo "Terragrunt version:"
          terragrunt --version
          echo "Current directory: $(pwd)"
          echo "Files in current directory:"
          ls -la
          echo "Looking for .tf files:"
          find . -name "*.tf" -not -path "./.git/*" || echo "No .tf files found"

  # Job 2: Security Scan
  security:
    name: 'Security Scan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: environments/